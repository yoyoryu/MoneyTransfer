/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import generated.tables.Accounttransactions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccounttransactionsRecord extends UpdatableRecordImpl<AccounttransactionsRecord> implements Record4<Integer, Integer, BigDecimal, String> {

    private static final long serialVersionUID = 853486060;

    /**
     * Setter for <code>moneytransfer.accounttransactions.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>moneytransfer.accounttransactions.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>moneytransfer.accounttransactions.AccountID</code>.
     */
    public void setAccountid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>moneytransfer.accounttransactions.AccountID</code>.
     */
    public Integer getAccountid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>moneytransfer.accounttransactions.Amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>moneytransfer.accounttransactions.Amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>moneytransfer.accounttransactions.Message</code>.
     */
    public void setMessage(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>moneytransfer.accounttransactions.Message</code>.
     */
    public String getMessage() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, BigDecimal, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, BigDecimal, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Accounttransactions.ACCOUNTTRANSACTIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Accounttransactions.ACCOUNTTRANSACTIONS.ACCOUNTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Accounttransactions.ACCOUNTTRANSACTIONS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Accounttransactions.ACCOUNTTRANSACTIONS.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAccountid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAccountid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccounttransactionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccounttransactionsRecord value2(Integer value) {
        setAccountid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccounttransactionsRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccounttransactionsRecord value4(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccounttransactionsRecord values(Integer value1, Integer value2, BigDecimal value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccounttransactionsRecord
     */
    public AccounttransactionsRecord() {
        super(Accounttransactions.ACCOUNTTRANSACTIONS);
    }

    /**
     * Create a detached, initialised AccounttransactionsRecord
     */
    public AccounttransactionsRecord(Integer id, Integer accountid, BigDecimal amount, String message) {
        super(Accounttransactions.ACCOUNTTRANSACTIONS);

        set(0, id);
        set(1, accountid);
        set(2, amount);
        set(3, message);
    }
}
